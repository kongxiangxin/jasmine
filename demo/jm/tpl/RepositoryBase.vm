package $model.repoPkg;

import ${model.entityPkg}.${model.table.className};
import org.apache.ibatis.annotations.Param;

import java.util.Map;

/**
* ${model.table.className}RepositoryBase.
* auto generated by jasmine, please do not modify it!
*/
public interface ${model.table.className}RepositoryBase{
    /**
    *##
#if($model.deleteColumn)
 logical delete
#else
 physical delete
#end
    * @param id
    * @return
    */
    int delete(##
#foreach($column in $model.table.pks)##
$column.javaType ${column.fieldName}##
#if($foreach.hasNext ), #end##
#end##
);

    ${model.table.className} get(String id);

    /**
    * insert entity
    * @param entity
    * @return
    */
    int insert(${model.table.className} entity);

    /**
    *##
#if($model.versionColumn)
 update with optimistic lock
#else
 update
#end
    * @param entity
    * @return
    */
    int update(${model.table.className} entity);

    /**
    * update table set ${column} = #{value} where id = #{id}
    * @param id
    * @param column
    * @param value
    * @return
    */
    int updateColumn(@Param("id") String id, @Param("column") String column, @Param("value") Object value);

    /**
    * update table set ${column1} = #{value1}, ${column2} = #{value2}, ..., ${column-n} = #{value-n} where id = #{id}
    * @param id
    * @param columnWithValues
    * @return
    */
    int updateColumns(@Param("id") String id, @Param("columnWithValues") Map<String, Object> columnWithValues);
}
