#set ($entityType = "${model.entityPkg}.${model.table.className}")
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- auto generated by jasmine, please do not modify it! -->
<mapper namespace="${model.repoPkg}.${model.table.className}RepositoryBase">
    <sql id="TableName">
        ${model.table.name}
    </sql>

    <sql id="Columns">
#foreach($column in $model.table.columns)##
#if($foreach.first)     #end
${column.name}##
#if($foreach.hasNext ), #end##
#end

    </sql>

    <resultMap id="BaseResultMap" type="${entityType}" autoMapping="false">
        <id property="id" column="id" />
#foreach($column in $model.table.columns)
#if($column.name != "id")
        <result column="$column.name" property="$column.fieldName" jdbcType="$column.jdbcType"/>
#end## ~~ end column to field
#end
    </resultMap>

    <insert id="insert" parameterType="${entityType}">
        <selectKey keyProperty="id" resultType="string" order="BEFORE">
            <choose>
                <when test="id == null">
                    select replace(uuid(), '-', '') as id
                </when>
                <otherwise>
                    select #{id} as id;
                </otherwise>
            </choose>
        </selectKey>
        INSERT INTO
        <include refid="TableName"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
#foreach($column in $model.table.columns)##
#if($column.name != 'create_time' && $column.name != 'update_time')
            <if test="${column.fieldName} != null">
                ${column.name},
            </if>
#end
#end

        </trim>
        <trim prefix="VALUES(" suffix=")" suffixOverrides=",">
#foreach($column in $model.table.columns)##
#if($column.name != 'create_time' && $column.name != 'update_time')
            <if test="${column.fieldName} != null">
                #{${column.fieldName},jdbcType=${column.jdbcType}},
            </if>
#end
#end

        </trim>
    </insert>

    <select id="get" resultMap="BaseResultMap"
            parameterType="java.lang.String">
        select * from
        <include refid="TableName"/>
        where id = #{id}
#if($model.deleteColumn)
            and $model.deleteColumn.name = 0
#end
    </select>


#if($model.deleteColumn)
    <update id="delete" parameterType="java.lang.String">
        update
        <include refid="TableName"/>
        set ${model.deleteColumn.name} = 1
        where id = #{id}
    </update>
#else
    <delete id="delete" parameterType="java.lang.String">
        DELETE from
        <include refid="TableName"/>
        where id = #{id}
    </delete>
#end
    <update id="update" parameterType="${entityType}">
        update
        <include refid="TableName"/>
        set
        <trim suffixOverrides=",">
#foreach($column in $model.table.columns)##
#if($column.name != "id" && $column.name != 'create_time' && $column.name != 'update_time' && $column.name != $model.versionColumn.name)
            <if test="${column.fieldName} != null">
                ${column.name} = #{${column.fieldName},jdbcType=${column.jdbcType}},
            </if>
#end##
#end
#if($model.versionColumn)
        ${model.versionColumn.name} = ${model.versionColumn.name} + 1
#end
        </trim>
        where id = #{id}
#if($model.versionColumn)
            and ${model.versionColumn.name} = #{${model.versionColumn.fieldName},jdbcType=${model.versionColumn.jdbcType}}
#end
    </update>

    <update id="updateColumn">
        update
        <include refid="TableName"/>
        set ${column} = #{value}
        where id = #{id}
    </update>

    <update id="updateColumns">
        update
        <include refid="TableName"/>
        set
        <trim suffixOverrides=",">
            <foreach collection="columnWithValues.keys" item="key" separator="," >
                ${key} = #{columnWithValues[${key}]}
            </foreach>
        </trim>
        where id = #{id}
    </update>
</mapper>